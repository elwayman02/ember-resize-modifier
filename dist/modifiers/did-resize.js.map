{"version":3,"file":"did-resize.js","sources":["../../src/modifiers/did-resize.js"],"sourcesContent":["import Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\n\nexport default class DidResizeModifier extends Modifier {\n  // Public API\n  element;\n  handler;\n  options = {};\n\n  // Private API\n  static observer = null;\n  static handlers = null;\n\n  constructor() {\n    super(...arguments);\n\n    if (!('ResizeObserver' in window)) {\n      return;\n    }\n\n    if (!DidResizeModifier.observer) {\n      DidResizeModifier.handlers = new WeakMap();\n      DidResizeModifier.observer = new ResizeObserver((entries, observer) => {\n        window.requestAnimationFrame(() => {\n          for (let entry of entries) {\n            const handler = DidResizeModifier.handlers.get(entry.target);\n            if (handler) handler(entry, observer);\n          }\n        });\n      });\n    }\n\n    registerDestructor(this, unobserve);\n  }\n\n  modify(element, positional /*, named*/) {\n    unobserve(this);\n\n    this.element = element;\n\n    const [handler, options] = positional;\n\n    // Save arguments for when we need them\n    this.handler = handler;\n    this.options = options || this.options;\n\n    this.observe();\n  }\n\n  observe() {\n    if (DidResizeModifier.observer) {\n      this.addHandler();\n      DidResizeModifier.observer.observe(this.element, this.options);\n    }\n  }\n\n  addHandler() {\n    DidResizeModifier.handlers.set(this.element, this.handler);\n  }\n\n  removeHandler() {\n    DidResizeModifier.handlers.delete(this.element);\n  }\n}\n\n/**\n *\n * @param {DidResizeModifier} instance\n */\nfunction unobserve(instance) {\n  if (instance.element && DidResizeModifier.observer) {\n    DidResizeModifier.observer.unobserve(instance.element);\n    instance.removeHandler();\n  }\n}\n"],"names":["DidResizeModifier","Modifier","element","handler","options","observer","handlers","constructor","arguments","window","WeakMap","ResizeObserver","entries","requestAnimationFrame","entry","get","target","registerDestructor","unobserve","modify","positional","observe","addHandler","set","removeHandler","delete","instance"],"mappings":";;;AAGe,MAAMA,iBAAiB,SAASC,QAAQ,CAAC;AACtD;EACAC,OAAO,CAAA;EACPC,OAAO,CAAA;EACPC,OAAO,GAAG,EAAE,CAAA;;AAEZ;EACA,OAAOC,QAAQ,GAAG,IAAI,CAAA;EACtB,OAAOC,QAAQ,GAAG,IAAI,CAAA;AAEtBC,EAAAA,WAAWA,GAAG;IACZ,KAAK,CAAC,GAAGC,SAAS,CAAC,CAAA;AAEnB,IAAA,IAAI,EAAE,gBAAgB,IAAIC,MAAM,CAAC,EAAE;AACjC,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACT,iBAAiB,CAACK,QAAQ,EAAE;AAC/BL,MAAAA,iBAAiB,CAACM,QAAQ,GAAG,IAAII,OAAO,EAAE,CAAA;MAC1CV,iBAAiB,CAACK,QAAQ,GAAG,IAAIM,cAAc,CAAC,CAACC,OAAO,EAAEP,QAAQ,KAAK;QACrEI,MAAM,CAACI,qBAAqB,CAAC,MAAM;AACjC,UAAA,KAAK,IAAIC,KAAK,IAAIF,OAAO,EAAE;YACzB,MAAMT,OAAO,GAAGH,iBAAiB,CAACM,QAAQ,CAACS,GAAG,CAACD,KAAK,CAACE,MAAM,CAAC,CAAA;AAC5D,YAAA,IAAIb,OAAO,EAAEA,OAAO,CAACW,KAAK,EAAET,QAAQ,CAAC,CAAA;AACvC,WAAA;AACF,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CAAA;AACJ,KAAA;AAEAY,IAAAA,kBAAkB,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;AACrC,GAAA;AAEAC,EAAAA,MAAMA,CAACjB,OAAO,EAAEkB,UAAU,cAAc;IACtCF,SAAS,CAAC,IAAI,CAAC,CAAA;IAEf,IAAI,CAAChB,OAAO,GAAGA,OAAO,CAAA;AAEtB,IAAA,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGgB,UAAU,CAAA;;AAErC;IACA,IAAI,CAACjB,OAAO,GAAGA,OAAO,CAAA;AACtB,IAAA,IAAI,CAACC,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,CAAA;IAEtC,IAAI,CAACiB,OAAO,EAAE,CAAA;AAChB,GAAA;AAEAA,EAAAA,OAAOA,GAAG;IACR,IAAIrB,iBAAiB,CAACK,QAAQ,EAAE;MAC9B,IAAI,CAACiB,UAAU,EAAE,CAAA;AACjBtB,MAAAA,iBAAiB,CAACK,QAAQ,CAACgB,OAAO,CAAC,IAAI,CAACnB,OAAO,EAAE,IAAI,CAACE,OAAO,CAAC,CAAA;AAChE,KAAA;AACF,GAAA;AAEAkB,EAAAA,UAAUA,GAAG;AACXtB,IAAAA,iBAAiB,CAACM,QAAQ,CAACiB,GAAG,CAAC,IAAI,CAACrB,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC,CAAA;AAC5D,GAAA;AAEAqB,EAAAA,aAAaA,GAAG;IACdxB,iBAAiB,CAACM,QAAQ,CAACmB,MAAM,CAAC,IAAI,CAACvB,OAAO,CAAC,CAAA;AACjD,GAAA;AACF,CAAA;;AAEA;AACA;AACA;AACA;AACA,SAASgB,SAASA,CAACQ,QAAQ,EAAE;AAC3B,EAAA,IAAIA,QAAQ,CAACxB,OAAO,IAAIF,iBAAiB,CAACK,QAAQ,EAAE;IAClDL,iBAAiB,CAACK,QAAQ,CAACa,SAAS,CAACQ,QAAQ,CAACxB,OAAO,CAAC,CAAA;IACtDwB,QAAQ,CAACF,aAAa,EAAE,CAAA;AAC1B,GAAA;AACF;;;;"}